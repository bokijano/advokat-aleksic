{"version":3,"sources":["pictures/law1.jpg","pictures/name.jpg","components/Contact/Contact.js","components/Contact/Form.js","components/Contact/Map.js","components/Contact/DisplayContacts.js","components/Navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Contact","react_default","a","createElement","className","index_esm","md_index_esm","Component","Form","state","name","email","message","handleChange","e","_e$target","target","value","_this","setState","Object","defineProperty","action","method","type","placeholder","this","onChange","required","MapContainer","id","src","frameBorder","scrolling","marginHeight","marginWidth","DisplayContacts","Contact_Contact","Form_Form","Map_MapContainer","Navbar","Law","alt","App","components_Navbar_Navbar","DisplayContacts_DisplayContacts","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.20cfcbeb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/law1.d86bd0ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/name.a8e71d3a.jpg\";","import React, { Component } from \"react\";\r\nimport { FaHome } from \"react-icons/fa\";\r\nimport { MdPhoneAndroid, MdEmail } from \"react-icons/md\";\r\n\r\n\r\nexport default class Contact extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"about\">\r\n        <h3>Контакт подаци</h3>\r\n\r\n        <span>\r\n          <FaHome /> <span>Рентгенова 31/19, 18000 Ниш</span>\r\n        </span>\r\n        <span>\r\n          <MdEmail /> <span>aleksic.f@gmail.com</span>\r\n        </span>\r\n        <span>\r\n          <MdPhoneAndroid /> <span>065/8834-816</span>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./form.css\";\r\n\r\nexport default class Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\"\r\n  };\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"form-display\"\r\n        action=\"https://formspree.io/krstic.bojan80@gmail.com\"\r\n        method=\"POST\"\r\n      >\r\n        <h3>Пошаљите поруку</h3>\r\n        <label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className=\"name\"\r\n            placeholder=\"Иme\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className=\"email\"\r\n            placeholder=\"Emaил\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <textarea\r\n            name=\"message\"\r\n            className=\"message\"\r\n            placeholder=\"Порука\"\r\n            value={this.state.message}\r\n            onChange={this.handleChange}\r\n            required\r\n          ></textarea>\r\n        </label>\r\n        <input className=\"btn-submit\" type=\"submit\" value=\"Пошаљи\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class MapContainer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"mapouter\">\r\n        <div className=\"gmap_canvas\">\r\n          <iframe\r\n            className=\"map-size\"\r\n            id=\"gmap_canvas\"\r\n            src=\"https://maps.google.com/maps?q=rentgenova%2031%20Nis&t=&z=15&ie=UTF8&iwloc=&output=embed\"\r\n            frameBorder=\"0\"\r\n            scrolling=\"no\"\r\n            marginHeight=\"0\"\r\n            marginWidth=\"0\"\r\n          ></iframe>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact.js\";\r\nimport Form from \"./Form.js\";\r\nimport MapContainer from \"./Map.js\";\r\nimport \"./form.css\";\r\n\r\nexport default class DisplayContacts extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"display-contact\">\r\n        <div className=\"cont\">\r\n          <Contact />\r\n        </div>\r\n        <div className=\"display-form\">\r\n          <Form />\r\n        </div>\r\n        <div className=\"display-map\">\r\n          <MapContainer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Law from \"./../../pictures/law1.jpg\";\r\nimport Name from \"./../../pictures/name.jpg\";\r\nimport \"./Navbar.css\";\r\n//import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <img className=\"law img-fluid\" src={Law} alt=\"law picture\" />\r\n      {/*<img className=\"name-navbar img-fluid\" src={Name} alt=\"name picture\" />*/}\r\n      <div className=\"law-name\">\r\n        <div className=\"first\">\r\n          <h2>Адвокат</h2>\r\n        </div>\r\n        <h1>Филип Алексић</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\nimport DisplayContacts from \"./components/Contact/DisplayContacts\";\nimport \"./App.css\";\n\nimport Navbar from \"./components/Navbar/Navbar\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <DisplayContacts />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}